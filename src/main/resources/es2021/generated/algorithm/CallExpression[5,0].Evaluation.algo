def [SYNTAX] CallExpression[5,0].Evaluation[R]<(CallExpression, IdentifierName),false>() = 0:{
  0:access __x0__ = (CallExpression "Evaluation")
  0:let baseReference = __x0__
  1:app __x1__ = (GetValue baseReference)
  1:let baseValue = [? __x1__]
  2:if true 2:let strict = true else 2:let strict = false
  3:app __x2__ = (EvaluatePropertyAccessWithIdentifierKey baseValue IdentifierName strict)
  3:return [? __x2__]
}
- id: "sec-property-accessors-runtime-semantics-evaluation"
- code:
          1. Let _baseReference_ be the result of evaluating |CallExpression|.
          1. Let _baseValue_ be ? GetValue(_baseReference_).
          1. If the code matched by this |CallExpression| is strict mode code, let _strict_ be *true*; else let _strict_ be *false*.
          1. Return ? EvaluatePropertyAccessWithIdentifierKey(_baseValue_, |IdentifierName|, _strict_).