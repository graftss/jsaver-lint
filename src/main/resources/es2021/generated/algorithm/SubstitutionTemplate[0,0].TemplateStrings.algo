def [SYNTAX] SubstitutionTemplate[0,0].TemplateStrings[S]<(TemplateHead, Expression, TemplateSpans),true>(raw) = 0:{
  0:if (= raw false) 0:{
    1:access __x0__ = (TemplateHead "TV")
    1:let head = __x0__
  } else 2:{
    3:access __x1__ = (TemplateHead "TRV")
    3:let head = __x1__
  }
  4:access __x2__ = (TemplateSpans "TemplateStrings" raw)
  4:let tail = __x2__
  5:let list = (copy-obj tail)
  5:prepend head -> list
  5:return list
}
- id: "sec-static-semantics-templatestrings"
- code:
          1. If _raw_ is *false*, then
            1. Let _head_ be the TV of |TemplateHead|.
          1. Else,
            1. Let _head_ be the TRV of |TemplateHead|.
          1. Let _tail_ be TemplateStrings of |TemplateSpans| with argument _raw_.
          1. Return a List whose elements are _head_ followed by the elements of _tail_.