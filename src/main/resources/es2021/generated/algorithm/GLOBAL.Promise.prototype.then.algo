def [BUILTIN] Promise.prototype.then(onFulfilled, onRejected) = 0:{
  0:let promise = this
  1:app __x0__ = (IsPromise promise)
  1:if (= __x0__ false) 1:throw TypeError else 1:{}
  2:app __x1__ = (SpeciesConstructor promise INTRINSICS["%Promise%"])
  2:let C = [? __x1__]
  3:app __x2__ = (NewPromiseCapability C)
  3:let resultCapability = [? __x2__]
  4:app __x3__ = (PerformPromiseThen promise onFulfilled onRejected resultCapability)
  4:return __x3__
}
- id: "sec-promise.prototype.then"
- code:
          1. Let _promise_ be the *this* value.
          1. If IsPromise(_promise_) is *false*, throw a *TypeError* exception.
          1. Let _C_ be ? SpeciesConstructor(_promise_, %Promise%).
          1. Let _resultCapability_ be ? NewPromiseCapability(_C_).
          1. Return PerformPromiseThen(_promise_, _onFulfilled_, _onRejected_, _resultCapability_).