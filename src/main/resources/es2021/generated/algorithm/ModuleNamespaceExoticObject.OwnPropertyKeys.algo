def [METHOD] ModuleNamespaceExoticObject.OwnPropertyKeys(O)() = 0:{
  0:let exports = (copy-obj O.Exports)
  1:app __x0__ = (OrdinaryOwnPropertyKeys O)
  1:let symbolKeys = [! __x0__]
  2:let __x1__ = symbolKeys
  2:let __x2__ = 0i
  2:while (< __x2__ __x1__.length) 2:{
    2:let __x3__ = __x1__[__x2__]
    2:__x2__ = (+ __x2__ 1i)
    2:append __x3__ -> exports
  }
  3:return exports
}
- id: "sec-module-namespace-exotic-objects-ownpropertykeys"
- code:
          1. Let _exports_ be a copy of _O_.[[Exports]].
          1. Let _symbolKeys_ be ! OrdinaryOwnPropertyKeys(_O_).
          1. Append all the entries of _symbolKeys_ to the end of _exports_.
          1. Return _exports_.