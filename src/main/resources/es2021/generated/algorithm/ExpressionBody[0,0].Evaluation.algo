def [SYNTAX] ExpressionBody[0,0].Evaluation[R]<(AssignmentExpression),true>() = 0:{
  0:access __x0__ = (AssignmentExpression "Evaluation")
  0:let exprRef = __x0__
  1:app __x1__ = (GetValue exprRef)
  1:let exprValue = [? __x1__]
  2:return (comp[~return~] exprValue => ~empty~)
}
- id: "sec-arrow-function-definitions-runtime-semantics-evaluation"
- code:
        1. Let _exprRef_ be the result of evaluating |AssignmentExpression|.
        1. Let _exprValue_ be ? GetValue(_exprRef_).
        1. Return Completion { [[Type]]: ~return~, [[Value]]: _exprValue_, [[Target]]: ~empty~ }.