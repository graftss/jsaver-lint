def [SYNTAX] ForStatement[0,4].ForLoopEvaluation[R]<(Expression0, Expression1, Expression2, Statement),true>(labelSet) = 0:{
  0:if (! (= Expression0 absent)) 0:{
    1:access __x0__ = (Expression0 "Evaluation")
    1:let exprRef = __x0__
    2:app __x1__ = (GetValue exprRef)
    2:[? __x1__]
  } else 0:{}
  3:app __x2__ = (ForBodyEvaluation Expression1 Expression2 Statement (new []) labelSet)
  3:return [? __x2__]
}
- id: "sec-runtime-semantics-forloopevaluation"
- code:
          1. If the first |Expression| is present, then
            1. Let _exprRef_ be the result of evaluating the first |Expression|.
            1. Perform ? GetValue(_exprRef_).
          1. Return ? ForBodyEvaluation(the second |Expression|, the third |Expression|, |Statement|, « », _labelSet_).