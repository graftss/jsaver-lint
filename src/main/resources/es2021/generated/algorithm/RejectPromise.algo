def RejectPromise(promise, reason) = 0:{
  0:assert (= promise.PromiseState ~pending~)
  1:let reactions = promise.PromiseRejectReactions
  2:promise.PromiseResult = reason
  3:promise.PromiseFulfillReactions = undefined
  4:promise.PromiseRejectReactions = undefined
  5:promise.PromiseState = ~rejected~
  6:if (= promise.PromiseIsHandled false) 6:{
    6:app __x0__ = (HostPromiseRejectionTracker promise "reject")
    6:__x0__
  } else 6:{}
  7:app __x1__ = (TriggerPromiseReactions reactions reason)
  7:return __x1__
}
- id: "sec-rejectpromise"
- code:
          1. Assert: The value of _promise_.[[PromiseState]] is ~pending~.
          1. Let _reactions_ be _promise_.[[PromiseRejectReactions]].
          1. Set _promise_.[[PromiseResult]] to _reason_.
          1. Set _promise_.[[PromiseFulfillReactions]] to *undefined*.
          1. Set _promise_.[[PromiseRejectReactions]] to *undefined*.
          1. Set _promise_.[[PromiseState]] to ~rejected~.
          1. If _promise_.[[PromiseIsHandled]] is *false*, perform HostPromiseRejectionTracker(_promise_, *"reject"*).
          1. Return TriggerPromiseReactions(_reactions_, _reason_).