def [METHOD] ObjectEnvironmentRecord.SetMutableBinding(envRec)(N, V, S) = 0:{
  0:let bindings = envRec.BindingObject
  1:app __x0__ = (HasProperty bindings N)
  1:let stillExists = [? __x0__]
  2:if (&& (= stillExists false) (= S true)) 2:throw ReferenceError else 2:{}
  3:app __x1__ = (Set bindings N V S)
  3:return [? __x1__]
}
- id: "sec-object-environment-records-setmutablebinding-n-v-s"
- code:
            1. Let _bindings_ be the binding object for _envRec_.
            1. Let _stillExists_ be ? HasProperty(_bindings_, _N_).
            1. If _stillExists_ is *false* and _S_ is *true*, throw a *ReferenceError* exception.
            1. Return ? Set(_bindings_, _N_, _V_, _S_).