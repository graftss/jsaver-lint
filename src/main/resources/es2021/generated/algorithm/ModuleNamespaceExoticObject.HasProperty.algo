def [METHOD] ModuleNamespaceExoticObject.HasProperty(O)(P) = 0:{
  0:if (= (typeof P) Symbol) 0:{
    0:app __x0__ = (OrdinaryHasProperty O P)
    0:return __x0__
  } else 0:{}
  1:let exports = O.Exports
  2:if (contains exports P) 2:return true else 2:{}
  3:return false
}
- id: "sec-module-namespace-exotic-objects-hasproperty-p"
- code:
          1. If Type(_P_) is Symbol, return OrdinaryHasProperty(_O_, _P_).
          1. Let _exports_ be _O_.[[Exports]].
          1. If _P_ is an element of _exports_, return *true*.
          1. Return *false*.