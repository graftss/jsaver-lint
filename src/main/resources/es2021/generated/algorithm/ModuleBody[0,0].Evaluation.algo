def [SYNTAX] ModuleBody[0,0].Evaluation[R]<(ModuleItemList),true>() = 0:{
  0:access __x0__ = (ModuleItemList "Evaluation")
  0:let result = __x0__
  1:if (&& (= result.Type ~normal~) (= result.Value ~empty~)) 2:return undefined else 1:{}
  3:return result
}
- id: "sec-module-semantics-runtime-semantics-evaluation"
- code:
          1. Let _result_ be the result of evaluating |ModuleItemList|.
          1. If _result_.[[Type]] is ~normal~ and _result_.[[Value]] is ~empty~, then
            1. Return NormalCompletion(*undefined*).
          1. Return Completion(_result_).