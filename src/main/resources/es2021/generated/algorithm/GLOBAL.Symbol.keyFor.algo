def [BUILTIN] Symbol.keyFor(sym) = 0:{
  0:if (! (= (typeof sym) Symbol)) 0:throw TypeError else 0:{}
  1:let __x0__ = SYMBOL_REGISTRY
  1:let __x1__ = 0i
  1:while (< __x1__ __x0__.length) 1:{
    1:let e = __x0__[__x1__]
    1:__x1__ = (+ __x1__ 1i)
    2:app __x2__ = (SameValue e.Symbol sym)
    2:if (= __x2__ true) 2:return e.Key else 2:{}
  }
  4:return undefined
}
- id: "sec-symbol.keyfor"
- code:
          1. If Type(_sym_) is not Symbol, throw a *TypeError* exception.
          1. For each element _e_ of the GlobalSymbolRegistry List (see <emu-xref href="#sec-symbol.for"></emu-xref>), do
            1. If SameValue(_e_.[[Symbol]], _sym_) is *true*, return _e_.[[Key]].
          1. Assert: GlobalSymbolRegistry does not currently contain an entry for _sym_.
          1. Return *undefined*.