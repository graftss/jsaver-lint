def CompletePropertyDescriptor(Desc) = 0:{
  0:assert (is-instance-of Desc PropertyDescriptor)
  1:let like = (new Record("Value" -> undefined, "Writable" -> false, "Get" -> undefined, "Set" -> undefined, "Enumerable" -> false, "Configurable" -> false))
  2:let __x0__ = true
  2:app __x1__ = (IsGenericDescriptor Desc)
  2:__x0__ = (= __x1__ true)
  2:if __x0__ 30:{} else 31:{
    31:app __x2__ = (IsDataDescriptor Desc)
    31:__x0__ = (= __x2__ true)
  }
  2:if __x0__ 2:{
    3:if (= Desc.Value absent) 3:Desc.Value = like.Value else 3:{}
    4:if (= Desc.Writable absent) 4:Desc.Writable = like.Writable else 4:{}
  } else 5:{
    6:if (= Desc.Get absent) 6:Desc.Get = like.Get else 6:{}
    7:if (= Desc.Set absent) 7:Desc.Set = like.Set else 7:{}
  }
  8:if (= Desc.Enumerable absent) 8:Desc.Enumerable = like.Enumerable else 8:{}
  9:if (= Desc.Configurable absent) 9:Desc.Configurable = like.Configurable else 9:{}
  10:return Desc
}
- id: "sec-completepropertydescriptor"
- code:
          1. Assert: _Desc_ is a Property Descriptor.
          1. Let _like_ be the Record { [[Value]]: *undefined*, [[Writable]]: *false*, [[Get]]: *undefined*, [[Set]]: *undefined*, [[Enumerable]]: *false*, [[Configurable]]: *false* }.
          1. If IsGenericDescriptor(_Desc_) is *true* or IsDataDescriptor(_Desc_) is *true*, then
            1. If _Desc_ does not have a [[Value]] field, set _Desc_.[[Value]] to _like_.[[Value]].
            1. If _Desc_ does not have a [[Writable]] field, set _Desc_.[[Writable]] to _like_.[[Writable]].
          1. Else,
            1. If _Desc_ does not have a [[Get]] field, set _Desc_.[[Get]] to _like_.[[Get]].
            1. If _Desc_ does not have a [[Set]] field, set _Desc_.[[Set]] to _like_.[[Set]].
          1. If _Desc_ does not have an [[Enumerable]] field, set _Desc_.[[Enumerable]] to _like_.[[Enumerable]].
          1. If _Desc_ does not have a [[Configurable]] field, set _Desc_.[[Configurable]] to _like_.[[Configurable]].
          1. Return _Desc_.