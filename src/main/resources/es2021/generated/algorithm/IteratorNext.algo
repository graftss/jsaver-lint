def IteratorNext(iteratorRecord, value?) = 0:{
  0:if (= value absent) 0:{
    1:app __x0__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator)
    1:let result = [? __x0__]
  } else 2:{
    3:app __x1__ = (Call iteratorRecord.NextMethod iteratorRecord.Iterator (new [value]))
    3:let result = [? __x1__]
  }
  4:if (! (= (typeof result) Object)) 4:throw TypeError else 4:{}
  5:return result
}
- id: "sec-iteratornext"
- code:
        1. If _value_ is not present, then
          1. Let _result_ be ? Call(_iteratorRecord_.[[NextMethod]], _iteratorRecord_.[[Iterator]]).
        1. Else,
          1. Let _result_ be ? Call(_iteratorRecord_.[[NextMethod]], _iteratorRecord_.[[Iterator]], « _value_ »).
        1. If Type(_result_) is not Object, throw a *TypeError* exception.
        1. Return _result_.