def [SYNTAX] NonemptyClassRangesNoDash[2,0].EarlyErrors[S]<(ClassAtomNoDash, ClassAtom, ClassRanges),true>() = 0:{
  0:let __x0__ = true
  0:access __x1__ = (ClassAtomNoDash "IsCharacterClass")
  0:__x0__ = (= __x1__ true)
  0:if __x0__ 26:{} else 26:{
    26:access __x2__ = (ClassAtom "IsCharacterClass")
    26:__x0__ = (= __x2__ true)
  }
  0:if __x0__ 0:throw SyntaxError else 0:{}
  1:let __x3__ = true
  1:access __x4__ = (ClassAtomNoDash "IsCharacterClass")
  1:__x3__ = (= __x4__ false)
  1:if __x3__ 1:{
    1:access __x5__ = (ClassAtom "IsCharacterClass")
    1:__x3__ = (= __x5__ false)
    1:if __x3__ 1:{
      1:access __x6__ = (ClassAtomNoDash "CharacterValue")
      1:access __x7__ = (ClassAtom "CharacterValue")
      1:__x3__ = (< __x7__ __x6__)
    } else 1:{}
  } else 1:{}
  1:if __x3__ 1:throw SyntaxError else 1:{}
}
- id: "sec-patterns-static-semantics-early-errors"
- code:
          <li>
            It is a Syntax Error if IsCharacterClass of |ClassAtomNoDash| is *true* or IsCharacterClass of |ClassAtom| is *true*.
          </li>
          <li>
            It is a Syntax Error if IsCharacterClass of |ClassAtomNoDash| is *false* and IsCharacterClass of |ClassAtom| is *false* and the CharacterValue of |ClassAtomNoDash| is larger than the CharacterValue of |ClassAtom|.
          </li>