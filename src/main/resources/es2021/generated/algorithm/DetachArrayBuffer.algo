def DetachArrayBuffer(arrayBuffer, key?) = 1:{
  1:app __x0__ = (IsSharedArrayBuffer arrayBuffer)
  1:assert (= __x0__ false)
  2:if (= key absent) 2:key = undefined else 2:{}
  3:app __x1__ = (SameValue arrayBuffer.ArrayBufferDetachKey key)
  3:if (= __x1__ false) 3:throw TypeError else 3:{}
  4:arrayBuffer.ArrayBufferData = null
  5:arrayBuffer.ArrayBufferByteLength = 0i
  6:return null
}
- id: "sec-detacharraybuffer"
- code:
          1. Assert: Type(_arrayBuffer_) is Object and it has [[ArrayBufferData]], [[ArrayBufferByteLength]], and [[ArrayBufferDetachKey]] internal slots.
          1. Assert: IsSharedArrayBuffer(_arrayBuffer_) is *false*.
          1. If _key_ is not present, set _key_ to *undefined*.
          1. If SameValue(_arrayBuffer_.[[ArrayBufferDetachKey]], _key_) is *false*, throw a *TypeError* exception.
          1. Set _arrayBuffer_.[[ArrayBufferData]] to *null*.
          1. Set _arrayBuffer_.[[ArrayBufferByteLength]] to 0.
          1. Return NormalCompletion(*null*).