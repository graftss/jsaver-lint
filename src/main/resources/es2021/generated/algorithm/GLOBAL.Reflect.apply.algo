def [BUILTIN] Reflect.apply(target, thisArgument, argumentsList) = 0:{
  0:app __x0__ = (IsCallable target)
  0:if (= __x0__ false) 0:throw TypeError else 0:{}
  1:app __x1__ = (CreateListFromArrayLike argumentsList)
  1:let args = [? __x1__]
  2:app __x2__ = (PrepareForTailCall)
  2:__x2__
  3:app __x3__ = (Call target thisArgument args)
  3:return [? __x3__]
}
- id: "sec-reflect.apply"
- code:
        1. If IsCallable(_target_) is *false*, throw a *TypeError* exception.
        1. Let _args_ be ? CreateListFromArrayLike(_argumentsList_).
        1. Perform PrepareForTailCall().
        1. Return ? Call(_target_, _thisArgument_, _args_).