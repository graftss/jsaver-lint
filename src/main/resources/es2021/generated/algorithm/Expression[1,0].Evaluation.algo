def [SYNTAX] Expression[1,0].Evaluation[R]<(Expression, AssignmentExpression),false>() = 0:{
  0:access __x0__ = (Expression "Evaluation")
  0:let lref = __x0__
  1:app __x1__ = (GetValue lref)
  1:[? __x1__]
  2:access __x2__ = (AssignmentExpression "Evaluation")
  2:let rref = __x2__
  3:app __x3__ = (GetValue rref)
  3:return [? __x3__]
}
- id: "sec-comma-operator-runtime-semantics-evaluation"
- code:
        1. Let _lref_ be the result of evaluating |Expression|.
        1. Perform ? GetValue(_lref_).
        1. Let _rref_ be the result of evaluating |AssignmentExpression|.
        1. Return ? GetValue(_rref_).