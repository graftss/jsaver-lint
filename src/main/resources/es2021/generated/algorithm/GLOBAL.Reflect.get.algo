def [BUILTIN] Reflect.get(target, propertyKey, receiver?) = 0:{
  0:if (! (= (typeof target) Object)) 0:throw TypeError else 0:{}
  1:app __x0__ = (ToPropertyKey propertyKey)
  1:let key = [? __x0__]
  2:if (= receiver absent) 3:receiver = target else 2:{}
  4:app __x1__ = (target.Get target key receiver)
  4:return [? __x1__]
}
- id: "sec-reflect.get"
- code:
        1. If Type(_target_) is not Object, throw a *TypeError* exception.
        1. Let _key_ be ? ToPropertyKey(_propertyKey_).
        1. If _receiver_ is not present, then
          1. Set _receiver_ to _target_.
        1. Return ? _target_.[[Get]](_key_, _receiver_).