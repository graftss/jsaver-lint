def GetValue(V) = 0:{
  0:[? V]
  1:if (! (is-instance-of V ReferenceRecord)) 1:return V else 1:{}
  2:app __x0__ = (IsUnresolvableReference V)
  2:if (= __x0__ true) 2:throw ReferenceError else 2:{}
  3:app __x1__ = (IsPropertyReference V)
  3:if (= __x1__ true) 3:{
    4:app __x2__ = (ToObject V.Base)
    4:let baseObj = [! __x2__]
    5:app __x3__ = (GetThisValue V)
    5:app __x4__ = (baseObj.Get baseObj V.ReferencedName __x3__)
    5:return [? __x4__]
  } else 6:{
    7:let base = V.Base
    8:assert (is-instance-of base EnvironmentRecord)
    9:app __x5__ = (base.GetBindingValue base V.ReferencedName V.Strict)
    9:return [? __x5__]
  }
}
- id: "sec-getvalue"
- code:
          1. ReturnIfAbrupt(_V_).
          1. If _V_ is not a Reference Record, return _V_.
          1. If IsUnresolvableReference(_V_) is *true*, throw a *ReferenceError* exception.
          1. If IsPropertyReference(_V_) is *true*, then
            1. [id="step-getvalue-toobject"] Let _baseObj_ be ! ToObject(_V_.[[Base]]).
            1. Return ? _baseObj_.[[Get]](_V_.[[ReferencedName]], GetThisValue(_V_)).
          1. Else,
            1. Let _base_ be _V_.[[Base]].
            1. Assert: _base_ is an Environment Record.
            1. Return ? _base_.GetBindingValue(_V_.[[ReferencedName]], _V_.[[Strict]]) (see <emu-xref href="#sec-environment-records"></emu-xref>).