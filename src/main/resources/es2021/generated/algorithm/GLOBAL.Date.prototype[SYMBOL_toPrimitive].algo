def [BUILTIN] Date.prototype[SYMBOL_toPrimitive](hint) = 0:{
  0:let O = this
  1:if (! (= (typeof O) Object)) 1:throw TypeError else 1:{}
  2:if (|| (= hint "string") (= hint "default")) 3:let tryFirst = ~string~ else 2:if (= hint "number") 5:let tryFirst = ~number~ else 2:throw TypeError
  7:app __x0__ = (OrdinaryToPrimitive O tryFirst)
  7:return [? __x0__]
}
- id: "sec-date.prototype-@@toprimitive"
- code:
          1. Let _O_ be the *this* value.
          1. If Type(_O_) is not Object, throw a *TypeError* exception.
          1. If _hint_ is *"string"* or *"default"*, then
            1. Let _tryFirst_ be ~string~.
          1. Else if _hint_ is *"number"*, then
            1. Let _tryFirst_ be ~number~.
          1. Else, throw a *TypeError* exception.
          1. Return ? OrdinaryToPrimitive(_O_, _tryFirst_).