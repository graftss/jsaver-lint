def TypedArraySpeciesCreate(exemplar, argumentList) = 1:{
  1:??? "Let id:{defaultConstructor} be the intrinsic object listed in column one of link:{table-the-typedarray-constructors} for id:{exemplar} . [ [ TypedArrayName ] ] ."
  2:app __x0__ = (SpeciesConstructor exemplar defaultConstructor)
  2:let constructor = [? __x0__]
  3:app __x1__ = (TypedArrayCreate constructor argumentList)
  3:let result = [? __x1__]
  5:if (! (== result.ContentType exemplar.ContentType)) 5:throw TypeError else 5:{}
  6:return result
}
- id: "typedarray-species-create"
- code:
          1. Assert: _exemplar_ is an Object that has [[TypedArrayName]] and [[ContentType]] internal slots.
          1. Let _defaultConstructor_ be the intrinsic object listed in column one of <emu-xref href="#table-the-typedarray-constructors"></emu-xref> for _exemplar_.[[TypedArrayName]].
          1. Let _constructor_ be ? SpeciesConstructor(_exemplar_, _defaultConstructor_).
          1. Let _result_ be ? TypedArrayCreate(_constructor_, _argumentList_).
          1. Assert: _result_ has [[TypedArrayName]] and [[ContentType]] internal slots.
          1. If _result_.[[ContentType]] â‰  _exemplar_.[[ContentType]], throw a *TypeError* exception.
          1. Return _result_.