def OrdinarySetPrototypeOf(O, V) = 1:{
  1:let current = O.Prototype
  2:app __x0__ = (SameValue V current)
  2:if (= __x0__ true) 2:return true else 2:{}
  3:let extensible = O.Extensible
  4:if (= extensible false) 4:return false else 4:{}
  5:let p = V
  6:let done = false
  7:while (= done false) 8:if (= p null) 8:done = true else 9:{
    9:app __x1__ = (SameValue p O)
    9:if (= __x1__ true) 9:return false else 9:if (! (= p.GetPrototypeOf ALGORITHM["OrdinaryObject.GetPrototypeOf"])) 11:done = true else 9:p = p.Prototype
  }
  13:O.Prototype = V
  14:return true
}
- id: "sec-ordinarysetprototypeof"
- code:
          1. Assert: Either Type(_V_) is Object or Type(_V_) is Null.
          1. Let _current_ be _O_.[[Prototype]].
          1. If SameValue(_V_, _current_) is *true*, return *true*.
          1. Let _extensible_ be _O_.[[Extensible]].
          1. If _extensible_ is *false*, return *false*.
          1. Let _p_ be _V_.
          1. Let _done_ be *false*.
          1. [id="step-ordinarysetprototypeof-loop"] Repeat, while _done_ is *false*,
            1. If _p_ is *null*, set _done_ to *true*.
            1. Else if SameValue(_p_, _O_) is *true*, return *false*.
            1. Else,
              1. If _p_.[[GetPrototypeOf]] is not the ordinary object internal method defined in <emu-xref href="#sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof"></emu-xref>, set _done_ to *true*.
              1. Else, set _p_ to _p_.[[Prototype]].
          1. Set _O_.[[Prototype]] to _V_.
          1. Return *true*.