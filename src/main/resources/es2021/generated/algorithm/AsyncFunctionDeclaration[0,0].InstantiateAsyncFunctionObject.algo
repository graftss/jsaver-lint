def [SYNTAX] AsyncFunctionDeclaration[0,0].InstantiateAsyncFunctionObject[R]<(BindingIdentifier, FormalParameters, AsyncFunctionBody),true>(scope) = 0:{
  0:access __x0__ = (BindingIdentifier "StringValue")
  0:let name = __x0__
  1:let sourceText = (get-syntax AsyncFunctionDeclaration)
  2:app __x1__ = (OrdinaryFunctionCreate INTRINSICS["%AsyncFunction.prototype%"] sourceText FormalParameters AsyncFunctionBody ~non-lexical-this~ scope)
  2:let F = [! __x1__]
  3:app __x2__ = (SetFunctionName F name)
  3:[! __x2__]
  4:return F
}
- id: "sec-runtime-semantics-instantiateasyncfunctionobject"
- code:
        1. Let _name_ be StringValue of |BindingIdentifier|.
        1. Let _sourceText_ be the source text matched by |AsyncFunctionDeclaration|.
        1. Let _F_ be ! OrdinaryFunctionCreate(%AsyncFunction.prototype%, _sourceText_, |FormalParameters|, |AsyncFunctionBody|, ~non-lexical-this~, _scope_).
        1. Perform ! SetFunctionName(_F_, _name_).
        1. Return _F_.