def [BUILTIN] WeakMap.prototype.get(key) = 0:{
  0:let M = this
  1:app __x0__ = (RequireInternalSlot M "WeakMapData")
  1:[? __x0__]
  2:let entries = M.WeakMapData
  3:if (! (= (typeof key) Object)) 3:return undefined else 3:{}
  4:let __x1__ = entries
  4:let __x2__ = 0i
  4:while (< __x2__ __x1__.length) 4:{
    4:let p = __x1__[__x2__]
    4:__x2__ = (+ __x2__ 1i)
    5:let __x3__ = true
    5:__x3__ = (! (= p.Key ~empty~))
    5:if __x3__ 5:{
      5:app __x4__ = (SameValue p.Key key)
      5:__x3__ = (= __x4__ true)
    } else 5:{}
    5:if __x3__ 5:return p.Value else 5:{}
  }
  6:return undefined
}
- id: "sec-weakmap.prototype.get"
- code:
          1. Let _M_ be the *this* value.
          1. Perform ? RequireInternalSlot(_M_, [[WeakMapData]]).
          1. Let _entries_ be the List that is _M_.[[WeakMapData]].
          1. If Type(_key_) is not Object, return *undefined*.
          1. For each Record { [[Key]], [[Value]] } _p_ of _entries_, do
            1. If _p_.[[Key]] is not ~empty~ and SameValue(_p_.[[Key]], _key_) is *true*, return _p_.[[Value]].
          1. Return *undefined*.