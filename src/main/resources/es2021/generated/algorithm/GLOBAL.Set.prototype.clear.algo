def [BUILTIN] Set.prototype.clear() = 0:{
  0:let S = this
  1:app __x0__ = (RequireInternalSlot S "SetData")
  1:[? __x0__]
  2:let entries = S.SetData
  3:let __x1__ = entries
  3:let __x2__ = 0i
  3:while (< __x2__ __x1__.length) 3:{
    3:let e = __x1__[__x2__]
    3:__x2__ = (+ __x2__ 1i)
    4:??? "Replace the element of id:{entries} whose value is id:{e} with an element whose value is const:{empty} ."
  }
  5:return undefined
}
- id: "sec-set.prototype.clear"
- code:
          1. Let _S_ be the *this* value.
          1. Perform ? RequireInternalSlot(_S_, [[SetData]]).
          1. Let _entries_ be the List that is _S_.[[SetData]].
          1. For each element _e_ of _entries_, do
            1. Replace the element of _entries_ whose value is _e_ with an element whose value is ~empty~.
          1. Return *undefined*.