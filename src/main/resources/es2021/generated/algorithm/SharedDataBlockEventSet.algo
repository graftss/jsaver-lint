def SharedDataBlockEventSet(execution) = 0:{
  0:let events = (new [])
  1:app __x0__ = (EventSet execution)
  1:let __x1__ = __x0__
  1:let __x2__ = 0i
  1:while (< __x2__ __x1__.length) 1:{
    1:let E = __x1__[__x2__]
    1:__x2__ = (+ __x2__ 1i)
    2:if (|| (|| (is-instance-of E ReadSharedMemory) (is-instance-of E WriteSharedMemory)) (is-instance-of E ReadModifyWriteSharedMemory)) 2:append E -> events else 2:{}
  }
  3:return events
}
- id: "sec-sharedatablockeventset"
- code:
        1. Let _events_ be an empty Set.
        1. For each event _E_ of EventSet(_execution_), do
          1. If _E_ is a ReadSharedMemory, WriteSharedMemory, or ReadModifyWriteSharedMemory event, add _E_ to _events_.
        1. Return _events_.