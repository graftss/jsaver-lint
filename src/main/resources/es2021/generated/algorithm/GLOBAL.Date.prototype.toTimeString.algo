def [BUILTIN] Date.prototype.toTimeString() = 0:{
  0:let O = this
  1:app __x0__ = (thisTimeValue O)
  1:let tv = [? __x0__]
  2:if (= tv NaN) 2:return "Invalid Date" else 2:{}
  3:app __x1__ = (LocalTime tv)
  3:let t = __x1__
  4:app __x2__ = (TimeString t)
  4:app __x3__ = (TimeZoneString tv)
  4:return (+ __x2__ __x3__)
}
- id: "sec-date.prototype.totimestring"
- code:
          1. Let _O_ be this Date object.
          1. Let _tv_ be ? thisTimeValue(_O_).
          1. If _tv_ is *NaN*, return *"Invalid Date"*.
          1. Let _t_ be LocalTime(_tv_).
          1. Return the string-concatenation of TimeString(_t_) and TimeZoneString(_tv_).