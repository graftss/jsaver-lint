def [SYNTAX] PropertyDefinition[0,0].PropertyDefinitionEvaluation[R]<(IdentifierReference),true>(object, enumerable) = 0:{
  0:access __x0__ = (IdentifierReference "StringValue")
  0:let propName = __x0__
  1:access __x1__ = (IdentifierReference "Evaluation")
  1:let exprValue = __x1__
  2:app __x2__ = (GetValue exprValue)
  2:let propValue = [? __x2__]
  3:assert (= enumerable true)
  5:app __x3__ = (CreateDataPropertyOrThrow object propName propValue)
  5:return [! __x3__]
}
- id: "sec-runtime-semantics-propertydefinitionevaluation"
- code:
          1. Let _propName_ be StringValue of |IdentifierReference|.
          1. Let _exprValue_ be the result of evaluating |IdentifierReference|.
          1. Let _propValue_ be ? GetValue(_exprValue_).
          1. Assert: _enumerable_ is *true*.
          1. Assert: _object_ is an ordinary, extensible object with no non-configurable properties.
          1. Return ! CreateDataPropertyOrThrow(_object_, _propName_, _propValue_).