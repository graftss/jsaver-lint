def SameValueNonNumeric(x, y) = 0:{
  0:assert (! (|| (= (typeof x) Number) (= (typeof x) BigInt)))
  1:assert (= (typeof x) (typeof y))
  2:if (= (typeof x) Undefined) 2:return true else 2:{}
  3:if (= (typeof x) Null) 3:return true else 3:{}
  4:if (= (typeof x) String) 5:return (= x y) else 4:{}
  6:if (= (typeof x) Boolean) 7:if (|| (&& (= x true) (= y true)) (&& (= x false) (= y false))) 7:return true else 7:return false else 6:{}
  8:if (= (typeof x) Symbol) 9:if (= x y) 9:return true else 9:return false else 8:{}
  10:if (= x y) 10:return true else 10:return false
}
- id: "sec-samevaluenonnumeric"
- code:
        1. Assert: Type(_x_) is not Number or BigInt.
        1. Assert: Type(_x_) is the same as Type(_y_).
        1. If Type(_x_) is Undefined, return *true*.
        1. If Type(_x_) is Null, return *true*.
        1. If Type(_x_) is String, then
          1. If _x_ and _y_ are exactly the same sequence of code units (same length and same code units at corresponding indices), return *true*; otherwise, return *false*.
        1. If Type(_x_) is Boolean, then
          1. If _x_ and _y_ are both *true* or both *false*, return *true*; otherwise, return *false*.
        1. If Type(_x_) is Symbol, then
          1. If _x_ and _y_ are both the same Symbol value, return *true*; otherwise, return *false*.
        1. If _x_ and _y_ are the same Object value, return *true*. Otherwise, return *false*.