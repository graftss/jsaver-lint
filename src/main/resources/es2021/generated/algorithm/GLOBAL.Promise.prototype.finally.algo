def [BUILTIN] Promise.prototype.finally(onFinally) = 0:{
  0:let promise = this
  1:if (! (= (typeof promise) Object)) 1:throw TypeError else 1:{}
  2:app __x0__ = (SpeciesConstructor promise INTRINSICS["%Promise%"])
  2:let C = [? __x0__]
  3:app __x1__ = (IsConstructor C)
  3:assert (= __x1__ true)
  4:app __x2__ = (IsCallable onFinally)
  4:if (= __x2__ false) 4:{
    5:let thenFinally = onFinally
    6:let catchFinally = onFinally
  } else 7:{
    8:let stepsThenFinally = ALGORITHM["GLOBAL.ThenFinallyFunctions"]
    9:let lengthThenFinally = 1i
    10:app __x3__ = (CreateBuiltinFunction stepsThenFinally lengthThenFinally "" (new ["Constructor", "OnFinally"]))
    10:let thenFinally = [! __x3__]
    11:thenFinally.Constructor = C
    12:thenFinally.OnFinally = onFinally
    13:let stepsCatchFinally = ALGORITHM["GLOBAL.CatchFinallyFunctions"]
    14:let lengthCatchFinally = 1i
    15:app __x4__ = (CreateBuiltinFunction stepsCatchFinally lengthCatchFinally "" (new ["Constructor", "OnFinally"]))
    15:let catchFinally = [! __x4__]
    16:catchFinally.Constructor = C
    17:catchFinally.OnFinally = onFinally
  }
  18:app __x5__ = (Invoke promise "then" (new [thenFinally, catchFinally]))
  18:return [? __x5__]
}
- id: "sec-promise.prototype.finally"
- code:
          1. Let _promise_ be the *this* value.
          1. If Type(_promise_) is not Object, throw a *TypeError* exception.
          1. Let _C_ be ? SpeciesConstructor(_promise_, %Promise%).
          1. Assert: IsConstructor(_C_) is *true*.
          1. If IsCallable(_onFinally_) is *false*, then
            1. Let _thenFinally_ be _onFinally_.
            1. Let _catchFinally_ be _onFinally_.
          1. Else,
            1. Let _stepsThenFinally_ be the algorithm steps defined in <emu-xref href="#sec-thenfinallyfunctions" title></emu-xref>.
            1. Let _lengthThenFinally_ be the number of non-optional parameters of the function definition in <emu-xref href="#sec-thenfinallyfunctions" title></emu-xref>.
            1. Let _thenFinally_ be ! CreateBuiltinFunction(_stepsThenFinally_, _lengthThenFinally_, *""*, « [[Constructor]], [[OnFinally]] »).
            1. Set _thenFinally_.[[Constructor]] to _C_.
            1. Set _thenFinally_.[[OnFinally]] to _onFinally_.
            1. Let _stepsCatchFinally_ be the algorithm steps defined in <emu-xref href="#sec-catchfinallyfunctions" title></emu-xref>.
            1. Let _lengthCatchFinally_ be the number of non-optional parameters of the function definition in <emu-xref href="#sec-catchfinallyfunctions" title></emu-xref>.
            1. Let _catchFinally_ be ! CreateBuiltinFunction(_stepsCatchFinally_, _lengthCatchFinally_, *""*, « [[Constructor]], [[OnFinally]] »).
            1. Set _catchFinally_.[[Constructor]] to _C_.
            1. Set _catchFinally_.[[OnFinally]] to _onFinally_.
          1. Return ? Invoke(_promise_, *"then"*, « _thenFinally_, _catchFinally_ »).