def [SYNTAX] IfStatement[0,0].HasCallInTailPosition[S]<(Expression, Statement0, Statement1),true>(call) = 0:{
  0:access __x0__ = (Statement0 "HasCallInTailPosition" call)
  0:let has = __x0__
  1:if (= has true) 1:return true else 1:{}
  2:access __x1__ = (Statement1 "HasCallInTailPosition" call)
  2:return __x1__
}
- id: "sec-statement-rules"
- code:
          1. Let _has_ be HasCallInTailPosition of the first |Statement| with argument _call_.
          1. If _has_ is *true*, return *true*.
          1. Return HasCallInTailPosition of the second |Statement| with argument _call_.