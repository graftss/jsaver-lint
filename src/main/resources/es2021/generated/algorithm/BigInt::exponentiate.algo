def BigInt::exponentiate(base, exponent) = 0:{
  0:if (< exponent 0n) 0:throw RangeError else 0:{}
  1:if (&& (= base 0n) (= exponent 0n)) 1:return 1n else 1:{}
  2:return (convert (** base exponent) num2bigint)
}
- id: "sec-numeric-types-bigint-exponentiate"
- code:
            1. If _exponent_ < *0*<sub>ℤ</sub>, throw a *RangeError* exception.
            1. If _base_ is *0*<sub>ℤ</sub> and _exponent_ is *0*<sub>ℤ</sub>, return *1*<sub>ℤ</sub>.
            1. Return the BigInt value that represents ℝ(_base_) raised to the power ℝ(_exponent_).