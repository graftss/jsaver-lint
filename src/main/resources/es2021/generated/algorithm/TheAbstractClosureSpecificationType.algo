def TheAbstractClosureSpecificationType() = 0:{
  0:let addend = 41i
  1:clo __x0__ = (x)[addend] => 2:return (+ x addend)
  1:let closure = __x0__
  3:app __x1__ = (closure 1i)
  3:let val = __x1__
  4:assert (= val 42i)
}
- id: "sec-abstract-closure"
- code:
        1. Let _addend_ be 41.
        1. Let _closure_ be a new Abstract Closure with parameters (_x_) that captures _addend_ and performs the following steps when called:
          1. Return _x_ + _addend_.
        1. Let _val_ be _closure_(1).
        1. Assert: _val_ is 42.