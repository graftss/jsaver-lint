def OrdinaryGet(O, P, Receiver) = 0:{
  0:app __x0__ = (IsPropertyKey P)
  0:assert (= __x0__ true)
  1:app __x1__ = (O.GetOwnProperty O P)
  1:let desc = [? __x1__]
  2:if (= desc undefined) 2:{
    3:app __x2__ = (O.GetPrototypeOf O)
    3:let parent = [? __x2__]
    4:if (= parent null) 4:return undefined else 4:{}
    5:app __x3__ = (parent.Get parent P Receiver)
    5:return [? __x3__]
  } else 2:{}
  6:app __x4__ = (IsDataDescriptor desc)
  6:if (= __x4__ true) 6:return desc.Value else 6:{}
  7:app __x5__ = (IsAccessorDescriptor desc)
  7:assert (= __x5__ true)
  8:let getter = desc.Get
  9:if (= getter undefined) 9:return undefined else 9:{}
  10:app __x6__ = (Call getter Receiver)
  10:return [? __x6__]
}
- id: "sec-ordinaryget"
- code:
          1. Assert: IsPropertyKey(_P_) is *true*.
          1. Let _desc_ be ? _O_.[[GetOwnProperty]](_P_).
          1. If _desc_ is *undefined*, then
            1. Let _parent_ be ? _O_.[[GetPrototypeOf]]().
            1. If _parent_ is *null*, return *undefined*.
            1. Return ? _parent_.[[Get]](_P_, _Receiver_).
          1. If IsDataDescriptor(_desc_) is *true*, return _desc_.[[Value]].
          1. Assert: IsAccessorDescriptor(_desc_) is *true*.
          1. Let _getter_ be _desc_.[[Get]].
          1. If _getter_ is *undefined*, return *undefined*.
          1. Return ? Call(_getter_, _Receiver_).