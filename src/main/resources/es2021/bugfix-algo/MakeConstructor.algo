def MakeConstructor(F, writablePrototype?, prototype?) = {
  1:if (is-instance-of F ECMAScriptFunctionObject) {
    2:app __x0__ = (IsConstructor F)
    2:assert (= __x0__ false)
    4:F.Construct = ALGORITHM["ECMAScriptFunctionObject.Construct"]
  } else 3:{
    F.Construct = ALGORITHM["BuiltinFunctionObject.Construct"]
  }
  5:F.ConstructorKind = ~base~
  6:if (= writablePrototype absent) writablePrototype = true else 3:{}
  7:if (= prototype absent) {
    8:app __x1__ = (OrdinaryObjectCreate INTRINSICS["%Object.prototype%"])
    8:prototype = [! __x1__]
    9:app __x2__ = (DefinePropertyOrThrow prototype "constructor" (new PropertyDescriptor("Value" -> F, "Writable" -> writablePrototype, "Enumerable" -> false, "Configurable" -> true)))
    9:[! __x2__]
  } else 3:{}
  10:app __x3__ = (DefinePropertyOrThrow F "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> writablePrototype, "Enumerable" -> false, "Configurable" -> false)))
  10:[! __x3__]
  11:return undefined
}
- id: "sec-makeconstructor"
- code:
        1. Assert: _F_ is an ECMAScript function object or a built-in function object.
        1. If _F_ is an ECMAScript function object, then
          1. Assert: IsConstructor(_F_) is *false*.
          1. Assert: _F_ is an extensible object that does not have a *"prototype"* own property.
          1. Set _F_.[[Construct]] to the definition specified in <emu-xref href="#sec-ecmascript-function-objects-construct-argumentslist-newtarget"></emu-xref>.
        1. Set _F_.[[ConstructorKind]] to ~base~.
        1. If _writablePrototype_ is not present, set _writablePrototype_ to *true*.
        1. If _prototype_ is not present, then
          1. Set _prototype_ to ! OrdinaryObjectCreate(%Object.prototype%).
          1. Perform ! DefinePropertyOrThrow(_prototype_, *"constructor"*, PropertyDescriptor { [[Value]]: _F_, [[Writable]]: _writablePrototype_, [[Enumerable]]: *false*, [[Configurable]]: *true* }).
        1. Perform ! DefinePropertyOrThrow(_F_, *"prototype"*, PropertyDescriptor { [[Value]]: _prototype_, [[Writable]]: _writablePrototype_, [[Enumerable]]: *false*, [[Configurable]]: *false* }).
        1. Return NormalCompletion(*undefined*).
