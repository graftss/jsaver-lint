def [BUILTIN] Math.floor(x) = 0:{
  0:app __x0__ = (ToNumber x)
  0:let n = [? __x0__]
  1:if (|| (|| (|| (|| (= n NaN) (= n 0i)) (= n -0.0)) (= n Infinity)) (= n -Infinity)) 1:return n else 1:{}
  2:if (&& (< n 1i) (< 0i n)) 2:return 0i else 2:{}
  3:??? "If id:{n} is an integral Number , return id:{n} ."
  4:??? "Return the greatest ( closest to + ∞ ) integral Number value that is not greater than id:{n} ."
}
- id: "sec-math.floor"
- code:
          1. Let _n_ be ? ToNumber(_x_).
          1. If _n_ is *NaN*, _n_ is *+0*<sub>𝔽</sub>, _n_ is *-0*<sub>𝔽</sub>, _n_ is *+∞*<sub>𝔽</sub>, or _n_ is *-∞*<sub>𝔽</sub>, return _n_.
          1. If _n_ < *1*<sub>𝔽</sub> and _n_ > *+0*<sub>𝔽</sub>, return *+0*<sub>𝔽</sub>.
          1. If _n_ is an integral Number, return _n_.
          1. Return the greatest (closest to +∞) integral Number value that is not greater than _n_.