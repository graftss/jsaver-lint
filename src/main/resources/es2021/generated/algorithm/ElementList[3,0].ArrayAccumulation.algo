def [SYNTAX] ElementList[3,0].ArrayAccumulation[R]<(ElementList, Elision, SpreadElement),false>(array, nextIndex) = 0:{
  0:access __x0__ = (ElementList "ArrayAccumulation" array nextIndex)
  0:nextIndex = __x0__
  1:[? nextIndex]
  2:if (! (= Elision absent)) 2:{
    3:access __x1__ = (Elision "ArrayAccumulation" array nextIndex)
    3:nextIndex = __x1__
    4:[? nextIndex]
  } else 2:{}
  5:access __x2__ = (SpreadElement "ArrayAccumulation" array nextIndex)
  5:return __x2__
}
- id: "sec-runtime-semantics-arrayaccumulation"
- code:
          1. Set _nextIndex_ to the result of performing ArrayAccumulation for |ElementList| with arguments _array_ and _nextIndex_.
          1. ReturnIfAbrupt(_nextIndex_).
          1. If |Elision| is present, then
            1. Set _nextIndex_ to the result of performing ArrayAccumulation for |Elision| with arguments _array_ and _nextIndex_.
            1. ReturnIfAbrupt(_nextIndex_).
          1. Return the result of performing ArrayAccumulation for |SpreadElement| with arguments _array_ and _nextIndex_.