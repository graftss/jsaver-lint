def ArrayCreate(length, proto?) = 0:{
  0:if (< (- (** 2i 32i) 1i) length) 0:throw RangeError else 0:{}
  1:if (= proto absent) 1:proto = INTRINSICS["%Array.prototype%"] else 1:{}
  2:app __x0__ = (MakeBasicObject (new ["Prototype", "Extensible"]))
  2:let A = [! __x0__]
  3:A.Prototype = proto
  4:A.DefineOwnProperty = ALGORITHM["ArrayExoticObject.DefineOwnProperty"]
  5:app __x1__ = (OrdinaryDefineOwnProperty A "length" (new PropertyDescriptor("Value" -> length, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  5:[! __x1__]
  6:return A
}
- id: "sec-arraycreate"
- code:
          1. If _length_ > 2<sup>32</sup> - 1, throw a *RangeError* exception.
          1. If _proto_ is not present, set _proto_ to %Array.prototype%.
          1. Let _A_ be ! MakeBasicObject(¬´ [[Prototype]], [[Extensible]] ¬ª).
          1. Set _A_.[[Prototype]] to _proto_.
          1. Set _A_.[[DefineOwnProperty]] as specified in <emu-xref href="#sec-array-exotic-objects-defineownproperty-p-desc"></emu-xref>.
          1. Perform ! OrdinaryDefineOwnProperty(_A_, *"length"*, PropertyDescriptor { [[Value]]: ùîΩ(_length_), [[Writable]]: *true*, [[Enumerable]]: *false*, [[Configurable]]: *false* }).
          1. Return _A_.