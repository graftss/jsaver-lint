def ToIndex(value) = 0:if (= value undefined) 1:return 0i else 2:{
  3:app __x0__ = (ToIntegerOrInfinity value)
  3:let integerIndex = [? __x0__]
  4:if (< integerIndex 0i) 4:throw RangeError else 4:{}
  5:app __x1__ = (ToLength integerIndex)
  5:let index = [! __x1__]
  6:app __x2__ = (SameValue integerIndex index)
  6:if (= [! __x2__] false) 6:throw RangeError else 6:{}
  7:return index
}
- id: "sec-toindex"
- code:
        1. If _value_ is *undefined*, then
          1. Return 0.
        1. Else,
          1. Let _integerIndex_ be ùîΩ(? ToIntegerOrInfinity(_value_)).
          1. If _integerIndex_ < *+0*<sub>ùîΩ</sub>, throw a *RangeError* exception.
          1. Let _index_ be ! ToLength(_integerIndex_).
          1. If ! SameValue(_integerIndex_, _index_) is *false*, throw a *RangeError* exception.
          1. Return ‚Ñù(_index_).