def [SYNTAX] AsyncGeneratorDeclaration[1,0].InstantiateAsyncGeneratorFunctionObject[R]<(FormalParameters, AsyncGeneratorBody),true>(scope) = 0:{
  0:let sourceText = (get-syntax AsyncGeneratorDeclaration)
  1:app __x0__ = (OrdinaryFunctionCreate INTRINSICS["%AsyncGeneratorFunction.prototype%"] sourceText FormalParameters AsyncGeneratorBody ~non-lexical-this~ scope)
  1:let F = __x0__
  2:app __x1__ = (SetFunctionName F "default")
  2:__x1__
  3:app __x2__ = (OrdinaryObjectCreate INTRINSICS["%AsyncGeneratorFunction.prototype.prototype%"])
  3:let prototype = [! __x2__]
  4:app __x3__ = (DefinePropertyOrThrow F "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))
  4:__x3__
  5:return F
}
- id: "sec-runtime-semantics-instantiateasyncgeneratorfunctionobject"
- code:
        1. Let _sourceText_ be the source text matched by |AsyncGeneratorDeclaration|.
        1. Let _F_ be OrdinaryFunctionCreate(%AsyncGeneratorFunction.prototype%, _sourceText_, |FormalParameters|, |AsyncGeneratorBody|, ~non-lexical-this~, _scope_).
        1. Perform SetFunctionName(_F_, *"default"*).
        1. Let _prototype_ be ! OrdinaryObjectCreate(%AsyncGeneratorFunction.prototype.prototype%).
        1. Perform DefinePropertyOrThrow(_F_, *"prototype"*, PropertyDescriptor { [[Value]]: _prototype_, [[Writable]]: *true*, [[Enumerable]]: *false*, [[Configurable]]: *false* }).
        1. Return _F_.