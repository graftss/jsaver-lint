def ToString(argument) = 1:{
  1:if (= (typeof argument) Undefined) 0:return "undefined" else 1:{}
  3:if (= (typeof argument) Null) 2:return "null" else 3:{}
  6:if (= (typeof argument) Boolean) 6:{
    4:if (= argument true) 4:return "true" else 4:{}
    5:if (= argument false) 5:return "false" else 5:{}
  } else 6:{}
  8:if (= (typeof argument) Number) 8:{
    7:app __x0__ = (PRIMITIVE[Number].toString argument)
    7:return [! __x0__]
  } else 8:{}
  10:if (= (typeof argument) String) 9:return argument else 10:{}
  12:if (= (typeof argument) Symbol) 11:throw TypeError else 12:{}
  14:if (= (typeof argument) BigInt) 14:{
    13:app __x1__ = (PRIMITIVE[BigInt].toString argument)
    13:return [! __x1__]
  } else 14:{}
  17:if (= (typeof argument) Object) 17:{
    15:app __x2__ = (ToPrimitive argument ~string~)
    15:let primValue = [? __x2__]
    16:app __x3__ = (ToString primValue)
    16:return [? __x3__]
  } else 17:{}
  18:assert false
}
- id: "table-tostring-conversions"
- code:
        <table>
          <tbody>
          <tr>
            <th>
              Argument Type
            </th>
            <th>
              Result
            </th>
          </tr>
          <tr>
            <td>
              Undefined
            </td>
            <td>
              Return *"undefined"*.
            </td>
          </tr>
          <tr>
            <td>
              Null
            </td>
            <td>
              Return *"null"*.
            </td>
          </tr>
          <tr>
            <td>
              Boolean
            </td>
            <td>
              <p>If _argument_ is *true*, return *"true"*.</p>
              <p>If _argument_ is *false*, return *"false"*.</p>
            </td>
          </tr>
          <tr>
            <td>
              Number
            </td>
            <td>
              Return ! Number::toString(_argument_).
            </td>
          </tr>
          <tr>
            <td>
              String
            </td>
            <td>
              Return _argument_.
            </td>
          </tr>
          <tr>
            <td>
              Symbol
            </td>
            <td>
              Throw a *TypeError* exception.
            </td>
          </tr>
          <tr>
            <td>
              BigInt
            </td>
            <td>
              Return ! BigInt::toString(_argument_).
            </td>
          </tr>
          <tr>
            <td>
              Object
            </td>
            <td>
              <p>Apply the following steps:</p>
              <emu-alg>
                1. Let _primValue_ be ? ToPrimitive(_argument_, ~string~).
                1. Return ? ToString(_primValue_).
              </emu-alg>
            </td>
          </tr>
          </tbody>
        </table>