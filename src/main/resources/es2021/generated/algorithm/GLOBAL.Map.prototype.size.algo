def [BUILTIN] Map.prototype.size() = 0:{
  0:let M = this
  1:app __x0__ = (RequireInternalSlot M "MapData")
  1:[? __x0__]
  2:let entries = M.MapData
  3:let count = 0i
  4:let __x1__ = entries
  4:let __x2__ = 0i
  4:while (< __x2__ __x1__.length) 4:{
    4:let p = __x1__[__x2__]
    4:__x2__ = (+ __x2__ 1i)
    5:if (! (= p.Key ~empty~)) 5:count = (+ count 1i) else 5:{}
  }
  6:return count
}
- id: "sec-get-map.prototype.size"
- code:
          1. Let _M_ be the *this* value.
          1. Perform ? RequireInternalSlot(_M_, [[MapData]]).
          1. Let _entries_ be the List that is _M_.[[MapData]].
          1. Let _count_ be 0.
          1. For each Record { [[Key]], [[Value]] } _p_ of _entries_, do
            1. If _p_.[[Key]] is not ~empty~, set _count_ to _count_ + 1.
          1. Return 𝔽(_count_).