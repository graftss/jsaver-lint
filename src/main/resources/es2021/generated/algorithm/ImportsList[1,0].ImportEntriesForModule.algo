def [SYNTAX] ImportsList[1,0].ImportEntriesForModule[S]<(ImportsList, ImportSpecifier),false>(module) = 0:{
  0:access __x0__ = (ImportsList "ImportEntriesForModule" module)
  0:let specs = __x0__
  1:access __x1__ = (ImportSpecifier "ImportEntriesForModule" module)
  1:let __x2__ = __x1__
  1:let __x3__ = 0i
  1:while (< __x3__ __x2__.length) 1:{
    1:let __x4__ = __x2__[__x3__]
    1:__x3__ = (+ __x3__ 1i)
    1:append __x4__ -> specs
  }
  2:return specs
}
- id: "sec-static-semantics-importentriesformodule"
- code:
          1. Let _specs_ be the ImportEntriesForModule of |ImportsList| with argument _module_.
          1. Append to _specs_ the elements of the ImportEntriesForModule of |ImportSpecifier| with argument _module_.
          1. Return _specs_.