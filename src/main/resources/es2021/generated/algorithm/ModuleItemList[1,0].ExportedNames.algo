def [SYNTAX] ModuleItemList[1,0].ExportedNames[S]<(ModuleItemList, ModuleItem),false>() = 0:{
  0:access __x0__ = (ModuleItemList "ExportedNames")
  0:let names = __x0__
  1:access __x1__ = (ModuleItem "ExportedNames")
  1:let __x2__ = __x1__
  1:let __x3__ = 0i
  1:while (< __x3__ __x2__.length) 1:{
    1:let __x4__ = __x2__[__x3__]
    1:__x3__ = (+ __x3__ 1i)
    1:append __x4__ -> names
  }
  2:return names
}
- id: "sec-static-semantics-exportednames"
- code:
          1. Let _names_ be ExportedNames of |ModuleItemList|.
          1. Append to _names_ the elements of the ExportedNames of |ModuleItem|.
          1. Return _names_.