def ResolveBinding(name, env?) = 0:{
  0:if (|| (= env absent) (= env undefined)) 1:env = CONTEXT.LexicalEnvironment else 0:{}
  2:assert (is-instance-of env EnvironmentRecord)
  3:if true 3:let strict = true else 3:let strict = false
  4:app __x0__ = (GetIdentifierReference env name strict)
  4:return [? __x0__]
}
- id: "sec-resolvebinding"
- code:
        1. If _env_ is not present or if _env_ is *undefined*, then
          1. Set _env_ to the running execution context's LexicalEnvironment.
        1. Assert: _env_ is an Environment Record.
        1. If the code matching the syntactic production that is being evaluated is contained in strict mode code, let _strict_ be *true*; else let _strict_ be *false*.
        1. Return ? GetIdentifierReference(_env_, _name_, _strict_).