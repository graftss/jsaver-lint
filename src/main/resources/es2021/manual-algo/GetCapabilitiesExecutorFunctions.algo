def [BUILTIN] GetCapabilitiesExecutorFunctions (resolve, reject) = {
  let capability = (new PromiseCapabilityRecord("Resolve" -> undefined, "Reject" -> undefined))
  let F = CONTEXT.Function
  let promiseCapability = F.Capability
  if (! (= promiseCapability.Resolve undefined)) throw TypeError else {}
  if (! (= promiseCapability.Reject undefined)) throw TypeError else {}
  promiseCapability.Resolve = resolve
  promiseCapability.Reject = reject
  return undefined
}
- id: "sec-getcapabilitiesexecutor-functions"
- code:
            1. Let _F_ be the active function object.
            1. Assert: _F_ has a [[Capability]] internal slot whose value is a PromiseCapability Record.
            1. Let _promiseCapability_ be _F_.[[Capability]].
            1. If _promiseCapability_.[[Resolve]] is not *undefined*, throw a *TypeError* exception.
            1. If _promiseCapability_.[[Reject]] is not *undefined*, throw a *TypeError* exception.
            1. Set _promiseCapability_.[[Resolve]] to _resolve_.
            1. Set _promiseCapability_.[[Reject]] to _reject_.
            1. Return *undefined*.
